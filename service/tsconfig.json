{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ES2023",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,

    /* Modules */
    "module": "nodenext",                                /* Specify what module code is generated. */

    /* JavaScript Support */
     "allowJs": false,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* Emit */
     "outDir": "./build",                                   /* Specify an output folder for all emitted files. */

    /* Interop Constraints */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
//     "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
//     "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
//     "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
//     "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
//     "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
//     "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
//     "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */

    /* Completeness */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  }
}
